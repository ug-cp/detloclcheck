variables:
  DEBIAN_FRONTEND: noninteractive
  APT_GET_INSTALL: "apt-get install --no-install-recommends -q -y"
  LOAD_DETLOCLCHECK_OCTAVE_MATLAB_TEST: "load_detloclcheck('foo.mat'); assert(ismember('axis1', who)); assert(ismember('axis2', who)); assert(ismember('coordinate_system', who)); assert(ismember('zeropoint', who)); clear; foo; assert(~ismember('axis1', who)); assert(~ismember('axis2', who)); assert(~ismember('coordinate_system', who)); assert(~ismember('zeropoint', who)); load_detloclcheck('foo.mat', 'coordinate_system'); assert(~ismember('axis1', who)); assert(~ismember('axis2', who)); assert(ismember('coordinate_system', who)); assert(~ismember('zeropoint', who));"
  DESCRIPTION: README.md
  PDFMANUAL: manual_detloclcheck.pdf
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/$TAG"
  PDFMANUALURL: "$PACKAGE_REGISTRY_URL/$PDFMANUAL"
  PIP_INSTALL: "pip3 install --break-system-packages --user"
  PIP_UNINSTALL: "pip3 uninstall --yes --break-system-packages"

stages:
  - pre
  - build_test
  - create_release
  - deploy

.display_env:
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: on_success
  before_script:
    - date
    - uname -a
    - cat /etc/os-release

pre-commit:
  stage: pre
  image:
    name: alpine:latest
  extends: .display_env
  script:
    - apk add --no-cache git npm pre-commit
    - pre-commit --version
    - pre-commit run --all-files --show-diff-on-failure

pycodestyle:
  stage: pre
  image:
    name: alpine:latest
  extends: .display_env
  script:
    - apk add --no-cache py3-pycodestyle
    - pycodestyle --version
    - pycodestyle --show-source --show-pep8 --statistics --verbose .

pylint:
  stage: pre
  image:
    name: alpine:latest
  extends: .display_env
  script:
    - apk add --no-cache py3-numpy py3-pip py3-pylint py3-scipy py3-yaml
    - pip3 install --break-system-packages matplotlib recommonmark
    - pylint --version
    - find . -name '*.py' -exec pylint {} +

ruff:
  stage: pre
  image:
    name: alpine:latest
  extends: .display_env
  script:
    - apk add --no-cache ruff
    - ruff check --unsafe-fixes --diff || echo "!!! todo !!!"
    - ruff check --output-format=full
    - ruff check --select NPY201 --fix --diff || echo "!!! todo !!!"
    - ruff check --select NPY201 --output-format=full

.debian_based_test:
  stage: build_test
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - when: on_success
  extends: .display_env
  script: &debian_based_test
    - apt-get update
    - $APT_GET_INSTALL python3-numpy python3-opencv python3-pip python3-scipy
    - python3 --version
    - pip3 --version
    - $PIP_INSTALL .
    - ls -lah "$HOME"/.local/lib/*/site-packages/
    - export PATH="$PATH":~/.local/bin
    - detloclcheck -h
    - detloclcheck create_checkerboard_image -h
    - detloclcheck find_checkerboard -h
    - $PIP_UNINSTALL DetLocLCheck
    - ls -lah "$HOME"/.local/lib/*/site-packages/
    - $APT_GET_INSTALL python3-pytest python3-pytest-cov python3-pytest-xdist
    - $PIP_INSTALL .
    - pytest-3 --numprocesses=auto --cov=detloclcheck --cov-report=html:coverage_report/ --cov-report=term --cov-report=xml --verbose tests/main.py
    - $PIP_UNINSTALL DetLocLCheck
    - $PIP_INSTALL -e .
    - detloclcheck -h
    - $APT_GET_INSTALL latexmk texlive-latex-extra texlive-latex-recommended make python3-recommonmark python3-sphinx python3-sphinx-argparse rsync tex-gyre
    - ./create_doc html
    - mv manual_detloclcheck public
    - python3 --version
  artifacts:
    expire_in: 1 hrs
    paths:
      - public

.almalinux_based_test:
  stage: build_test
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - when: on_success
  extends: .display_env
  variables:
    PIP_INSTALL: "pip3 install --user"
    PIP_UNINSTALL: "pip3 uninstall --yes"
  script:
    - yum -y install pip python3-numpy python3-scipy python3-pytest
    - dnf update -y
    - dnf install -y epel-release
    - dnf config-manager --set-enabled crb
    - dnf install -y python3-opencv python3-pytest-cov python3-pytest-xdist
    - python3 --version
    - pip3 --version
    - $PIP_INSTALL .
    - export PATH="$PATH":~/.local/bin
    - detloclcheck -h
    - detloclcheck create_checkerboard_image -h
    - detloclcheck find_checkerboard -h
    - pytest-3 --numprocesses=auto --cov=detloclcheck --no-cov-on-fail --cov-report=html:coverage_report/ --cov-report=term:skip-covered --verbose tests/main.py
    - $PIP_UNINSTALL DetLocLCheck
    - python3 --version

.opensuse_based_test:
  stage: build_test
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - when: on_success
  extends: .display_env
  variables:
    PIP_INSTALL: "pip3 install --user"
    PIP_UNINSTALL: "pip3 uninstall --yes"
  script:
    - zypper --non-interactive install git python311 python311-pip
    - python3.11 --version
    - pip3 --version
    - export PATH="$PATH":~/.local/bin
    - $PIP_INSTALL ".[opencv-python-headless]"
    - detloclcheck -h
    - detloclcheck create_checkerboard_image -h
    - detloclcheck find_checkerboard -h
    - $PIP_INSTALL ".[test]"
    - pytest --numprocesses=auto --cov=detloclcheck --no-cov-on-fail --cov-report=html:coverage_report/ --cov-report=term:skip-covered --verbose tests/main.py
    - $PIP_UNINSTALL DetLocLCheck
    - $PIP_INSTALL -e .
    - detloclcheck -h
    - $PIP_UNINSTALL DetLocLCheck
    - python3 --version

debian-latest:
  stage: build_test
  image:
    name: debian:latest
  extends: .display_env
  script:
    - *debian_based_test
    - ./create_doc pdf
    # upload pdf manual
    - $APT_GET_INSTALL curl
    - |
        curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file "$PDFMANUAL" "$PDFMANUALURL"
    - echo "TAG=$(detloclcheck version | cut -d ' ' -f 3)" > variables.env
    - cat variables.env
  coverage: '/^TOTAL\s*[0-9]+\s*[0-9]+\s*([0-9]+\%)$/'
  artifacts:
    paths:
      - public
      - manual_detloclcheck.pdf
    reports:
      dotenv: variables.env
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

debian-latest-venv-pip-latest:
  stage: build_test
  image:
    name: debian:latest
  variables:
    PIP_INSTALL: "pip3 install"
    PIP_UNINSTALL: "pip3 uninstall --yes"
    VENV_PATH: "$HOME/.venv_DetLocLCheck"
  extends: .display_env
  script:
    - apt-get update
    - $APT_GET_INSTALL python3-pip python3-venv
    - python3 --version
    - pip3 --version
    - python3 -m venv --upgrade-deps "$VENV_PATH"
    - ."$VENV_PATH"/bin/activate
    - pip3 --version
    - $PIP_INSTALL ".[opencv-python-headless]"
    - pip3 list --local
    - detloclcheck -h
    - detloclcheck create_checkerboard_image -h
    - detloclcheck find_checkerboard -h
    - $PIP_INSTALL ".[test]"
    - pip3 list --local
    - pytest --numprocesses=auto --cov=detloclcheck --cov-report=html:coverage_report/ --cov-report=term --cov-report=xml --verbose tests/main.py
    - $APT_GET_INSTALL latexmk texlive-latex-extra texlive-latex-recommended make rsync tex-gyre
    - $PIP_INSTALL ".[docs]"
    - pip3 list --local
    - ./create_doc
    - $PIP_UNINSTALL DetLocLCheck
    - deactivate
  artifacts:
    paths:
      - manual_detloclcheck
      - manual_detloclcheck.pdf

debian-latest-arm64:
  image:
    name: debian:latest
  tags:
    - aarch64
  extends: .debian_based_test

ubuntu-20.04:
  stage: build_test
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - when: on_success
  image:
    name: ubuntu:20.04
  extends: .display_env
  variables:
    PIP_INSTALL: "pip3 install"
    PIP_UNINSTALL: "pip3 uninstall --yes"
    VENV_PATH: "$HOME/.venv_DetLocLCheck"
  script:
    - apt-get update
    - apt-get install -q -y  libgl1 libglib2.0 python3.9-venv
    - python3.9 -m venv --system-site-packages "$VENV_PATH"
    - . "$VENV_PATH"/bin/activate
    - python3 --version
    - pip3 --version
    - $PIP_INSTALL opencv-python .
    - detloclcheck -h
    - detloclcheck create_checkerboard_image -h
    - detloclcheck find_checkerboard -h
    - $PIP_INSTALL pytest pytest-cov pytest-xdist
    - pytest --numprocesses=auto --cov=detloclcheck --no-cov-on-fail --cov-report=html:coverage_report/ --cov-report=term:skip-covered --verbose tests/main.py
    - $PIP_UNINSTALL DetLocLCheck

ubuntu-22.04:
  image:
    name: ubuntu:22.04
  extends: .debian_based_test
  variables:
    PIP_INSTALL: "pip3 install --user"
    PIP_UNINSTALL: "pip3 uninstall --yes"

ubuntu-22.04-arm64:
  image:
    name: ubuntu:22.04
  tags:
    - aarch64
  extends: .debian_based_test
  variables:
    PIP_INSTALL: "pip3 install --user"
    PIP_UNINSTALL: "pip3 uninstall --yes"

ubuntu-24.04:
  image:
    name: ubuntu:24.04
  extends: .debian_based_test

almalinux-latest:
  image:
    name: almalinux:latest
  extends: .almalinux_based_test

almalinux-latest-arm64:
  image:
    name: almalinux:latest
  tags:
    - aarch64
  extends: .almalinux_based_test

opensuse_leap_latest:
  image:
    name: opensuse/leap:latest
  extends: .opensuse_based_test

opensuse_leap_latest-arm64:
  image:
    name: opensuse/leap:latest
  tags:
    - aarch64
  extends: .opensuse_based_test

octave:
  stage: build_test
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - when: on_success
  image:
    name: debian:latest
  extends: .display_env
  script:
    - apt-get update
    - $APT_GET_INSTALL octave pipx python3-numpy python3-opencv python3-scipy
    - python3 --version
    - export PATH="$PATH":"$HOME/.local/bin"
    - pipx install --system-site-packages .
    - foopath="$(mktemp --directory)"
    - cp -p compatibility/load_detloclcheck.m "$foopath"/
    - cd "$foopath"/ || exit
    - echo "function foo" > foo.m
    - echo "load_detloclcheck('foo.mat')" >> foo.m
    - echo "end" >> foo.m
    - detloclcheck create_checkerboard_image -outfile foo.png -size 23
    - detloclcheck find_checkerboard -f foo.png -output_format mat
    - octave --no-history --no-window-system --eval "$LOAD_DETLOCLCHECK_OCTAVE_MATLAB_TEST"

matlab:
  stage: build_test
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - when: on_success
  image:
    # https://hub.docker.com/r/mathworks/matlab
    # https://github.com/mathworks/matlab-gitlab-ci-template/blob/main/README.md
    name: mathworks/matlab:latest
    entrypoint: [""]
  tags:
    - amd64
    - docker
    - ug-cp
  extends: .display_env
  script:
    - sudo chown -R "$(id -u -n)":"$(id -g -n)" "$(pwd)"
    - sudo apt-get update
    - sudo DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -q -y pipx python3-numpy python3-opencv python3-scipy
    - python3 --version
    - export PATH="$PATH":"$HOME/.local/bin"
    - pipx install --system-site-packages .
    - foopath="$(mktemp --directory)"
    - cp -p compatibility/load_detloclcheck.m "$foopath"/
    - cd "$foopath"/ || exit
    - echo "function foo" > foo.m
    - echo "load_detloclcheck('foo.mat')" >> foo.m
    - echo "end" >> foo.m
    - detloclcheck create_checkerboard_image -outfile foo.png -size 23
    - detloclcheck find_checkerboard -f foo.png -output_format mat
    - matlab -batch "$LOAD_DETLOCLCHECK_OCTAVE_MATLAB_TEST"

release_job:
  stage: create_release
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_SERVER_HOST == "gitlab.com"
  image:
    # https://docs.gitlab.com/ee/user/project/releases/release_cicd_examples.html#create-release-metadata-in-a-custom-script
    registry.gitlab.com/gitlab-org/release-cli:latest
  extends: .display_env
  script:
    - echo "running release_job for $TAG"
    - wget "https://zenodo.org/badge/DOI/10.5281/zenodo.15002509.svg"
  release:
    name: 'detloclcheck v$TAG'
    description: '$DESCRIPTION'
    tag_name: '$TAG'
    ref: '$CI_COMMIT_SHA'
    assets:
      links:
        - name: $PDFMANUAL
          filepath: /$PDFMANUAL
          url: $PDFMANUALURL
          link_type: other
  artifacts:
    paths:
      - "zenodo.15002509.svg"

pages:
  stage: deploy
  image:
    name: alpine:latest
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  dependencies:
    - debian-latest
  script:
    - date
    - apk add --no-cache pipx
    - export PATH="$PATH":"$HOME/.local/bin"
    - pipx install anybadge
    - anybadge -l "documentation as" -v pdf -f documentation_pdf.svg -c orange -o
    - anybadge -l "documentation as" -v html -f documentation_html.svg -c fuchsia -o
    - anybadge -l "home" -v detloclcheck -f home.svg -c darkblue -o
    - anybadge -l "mirror" -v detloclcheck -f mirror.svg -c brown -o
    - wget "https://zenodo.org/badge/DOI/10.5281/zenodo.15002509.svg"
  artifacts:
    paths:
      - documentation_pdf.svg
      - documentation_html.svg
      - home.svg
      - mirror.svg
      - public
      - "zenodo.15002509.svg"

trigger_deploy2zenodo:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_SERVER_HOST == "gitlab.com"
  variables:
    TAG: $TAG
    TAG_COMMIT_SHA: $CI_COMMIT_SHA
    TAG_COMMIT_TIMESTAMP: $CI_COMMIT_TIMESTAMP
  trigger:
    project: daniel_mohr/deploy_detloclcheck_to_zenodo
    strategy: depend
    forward:
      yaml_variables: true
      pipeline_variables: false
