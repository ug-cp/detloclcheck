variables:
  DEBIAN_FRONTEND: noninteractive
  APT_GET_INSTALL: "apt-get install --no-install-recommends -q -y"
  LOAD_DETLOCLCHECK_OCTAVE_MATLAB_TEST: "load_detloclcheck('foo.mat'); assert(ismember('axis1', who)); assert(ismember('axis2', who)); assert(ismember('coordinate_system', who)); assert(ismember('zeropoint', who)); clear; foo; assert(~ismember('axis1', who)); assert(~ismember('axis2', who)); assert(~ismember('coordinate_system', who)); assert(~ismember('zeropoint', who)); load_detloclcheck('foo.mat', 'coordinate_system'); assert(~ismember('axis1', who)); assert(~ismember('axis2', who)); assert(ismember('coordinate_system', who)); assert(~ismember('zeropoint', who));"

stages:
  - pre
  - build_test
  - deploy

.display_env:
  before_script:
    - date
    - uname -a
    - cat /etc/os-release

pre-commit:
  stage: pre
  image:
    name: alpine:edge
  extends: .display_env
  script:
    - apk add --no-cache git npm pre-commit py3-yaml shellcheck
    - pre-commit --version
    - pre-commit run --all-files
    - CREATED_SCRIPTS=$(mktemp -d)
    - |
      JOBNAMES="$(mktemp)"
      grep -E "^([^ ]+):$" < .gitlab-ci.yml | sed 's/://' > "$JOBNAMES"
      while IFS= read -r jobname
      do
        ./yaml2script.py .gitlab-ci.yml "$jobname" | tee "$CREATED_SCRIPTS/$jobname"
      done < "$JOBNAMES"
      rm "$JOBNAMES"
    - shellcheck -e SC1091 "$CREATED_SCRIPTS"/*

pycodestyle:
  stage: pre
  image:
    name: alpine:latest
  extends: .display_env
  script:
    - apk add --no-cache py3-pycodestyle
    - pycodestyle --version
    - pycodestyle --show-source --show-pep8 --statistics --verbose .

pylint:
  stage: pre
  image:
    name: alpine:latest
  allow_failure: true
  extends: .display_env
  script:
    - apk add --no-cache py3-numpy py3-pip py3-pylint py3-scipy py3-yaml
    - pip3 install --break-system-packages recommonmark
    - pylint --version
    - find . -name '*.py' -exec pylint {} +

ruff:
  stage: pre
  image:
    name: alpine:edge
  extends: .display_env
  script:
    - apk add --no-cache ruff
    - ruff check --unsafe-fixes --diff || echo "!!! todo !!!"
    - ruff check --output-format=full
    - ruff check --select NPY201 --fix --diff || echo "!!! todo !!!"
    - ruff check --select NPY201 --output-format=full

.debian_based_test:
  stage: build_test
  extends: .display_env
  variables:
    PIP_INSTALL: "pip3 install --break-system-packages --user"
    PIP_UNINSTALL: "pip3 uninstall --yes --break-system-packages"
  script:
    - apt-get update
    - $APT_GET_INSTALL python3-numpy python3-opencv python3-pip python3-scipy
    - python3 --version
    - pip3 --version
    - $PIP_INSTALL .
    - ls -lah "$HOME"/.local/lib/*/site-packages/
    - export PATH="$PATH":~/.local/bin
    - detloclcheck find_checkerboard -h
    - $PIP_UNINSTALL DetLocLCheck
    - ls -lah "$HOME"/.local/lib/*/site-packages/
    - $APT_GET_INSTALL python3-pytest python3-pytest-cov python3-pytest-xdist
    - $PIP_INSTALL .
    - pytest-3 --numprocesses=auto --cov=detloclcheck --cov-report=html:coverage_report/ --cov-report=term --cov-report=xml --verbose tests/main.py
    - $PIP_UNINSTALL DetLocLCheck
    - $PIP_INSTALL -e .
    - detloclcheck -h
    - $APT_GET_INSTALL latexmk texlive-latex-extra texlive-latex-recommended make python3-recommonmark python3-sphinx python3-sphinx-argparse rsync tex-gyre
    - ./create_doc html
    - mv manual_detloclcheck public
    - python3 --version
  artifacts:
    expire_in: 1 hrs
    paths:
      - public

.almalinux_based_test:
  stage: build_test
  extends: .display_env
  variables:
    PIP_INSTALL: "pip3 install --user"
    PIP_UNINSTALL: "pip3 uninstall --yes"
  script:
    - yum -y install pip python3-numpy python3-scipy python3-pytest
    - dnf update -y
    - dnf install -y epel-release
    - dnf config-manager --set-enabled crb
    - dnf install -y python3-opencv python3-pytest-cov python3-pytest-xdist
    - $PIP_INSTALL .
    - export PATH="$PATH":~/.local/bin
    - detloclcheck -h
    - detloclcheck create_checkerboard_image -h
    - detloclcheck find_checkerboard -h
    - pytest-3 --numprocesses=auto --cov=detloclcheck --no-cov-on-fail --cov-report=html:coverage_report/ --cov-report=term:skip-covered --verbose tests/main.py
    - $PIP_UNINSTALL DetLocLCheck
    - python3 --version

.opensuse_based_test:
  stage: build_test
  extends: .display_env
  variables:
    PIP_INSTALL: "pip3 install --user"
    PIP_UNINSTALL: "pip3 uninstall --yes"
  script:
    - zypper --non-interactive install git python311-hatchling python311-numpy python311-opencv python311-pip python3-scipy python311-pytest python311-pytest-cov python311-pytest-xdist
    - $PIP_INSTALL .
    - export PATH="$PATH":~/.local/bin
    - detloclcheck -h
    - detloclcheck create_checkerboard_image -h
    - detloclcheck find_checkerboard -h
    - pytest --numprocesses=auto --cov=detloclcheck --no-cov-on-fail --cov-report=html:coverage_report/ --cov-report=term:skip-covered --verbose tests/main.py
    - $PIP_UNINSTALL DetLocLCheck
    - $PIP_INSTALL -e .
    - detloclcheck -h
    - $PIP_UNINSTALL DetLocLCheck
    - python3 --version

debian-latest:
  image:
    name: debian:latest
  extends: .debian_based_test
  coverage: '/^TOTAL\s*[0-9]+\s*[0-9]+\s*([0-9]+\%)$/'
  artifacts:
    paths:
      - public
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

debian-latest-arm64:
  image:
    name: debian:latest
  tags:
    - aarch64
  extends: .debian_based_test

ubuntu-20.04:
  stage: build_test
  image:
    name: ubuntu:20.04
  extends: .display_env
  variables:
    PIP_INSTALL: "pip3 install"
    PIP_UNINSTALL: "pip3 uninstall --yes"
    VENV_PATH: "$HOME/.venv_DetLocLCheck"
  script:
    - apt-get update
    - apt-get install -q -y  libgl1 libglib2.0 python3.9-venv
    - python3.9 -m venv --system-site-packages "$VENV_PATH"
    - . "$VENV_PATH"/bin/activate
    - python3 --version
    - pip3 --version
    - $PIP_INSTALL opencv-python .
    - detloclcheck -h
    - detloclcheck create_checkerboard_image -h
    - detloclcheck find_checkerboard -h
    - $PIP_INSTALL pytest pytest-cov pytest-xdist
    - pytest --numprocesses=auto --cov=detloclcheck --no-cov-on-fail --cov-report=html:coverage_report/ --cov-report=term:skip-covered --verbose tests/main.py
    - $PIP_UNINSTALL DetLocLCheck

ubuntu-22.04:
  image:
    name: ubuntu:22.04
  extends: .debian_based_test
  variables:
    PIP_INSTALL: "pip3 install --user"
    PIP_UNINSTALL: "pip3 uninstall --yes"

ubuntu-22.04-arm64:
  image:
    name: ubuntu:22.04
  tags:
    - aarch64
  extends: .debian_based_test
  variables:
    PIP_INSTALL: "pip3 install --user"
    PIP_UNINSTALL: "pip3 uninstall --yes"

ubuntu-24.04:
  image:
    name: ubuntu:24.04
  extends: .debian_based_test

almalinux-latest:
  image:
    name: almalinux:latest
  extends: .almalinux_based_test

almalinux-latest-arm64:
  image:
    name: almalinux:latest
  tags:
    - aarch64
  extends: .almalinux_based_test

opensuse_leap_latest:
  image:
    name: opensuse/leap:latest
  extends: .opensuse_based_test

opensuse_leap_latest-arm64:
  image:
    name: opensuse/leap:latest
  tags:
    - aarch64
  extends: .opensuse_based_test

octave:
  stage: build_test
  image:
    name: debian:latest
  extends: .display_env
  variables:
    PIP_INSTALL: "pip3 install --break-system-packages --user"
  script:
    - apt-get update
    - $APT_GET_INSTALL octave python3-numpy python3-opencv python3-pip python3-scipy
    - python3 --version
    - export PATH="$PATH":"$HOME/.local/bin"
    - $PIP_INSTALL .
    - foopath="$(mktemp --directory)"
    - cp -p compatibility/load_detloclcheck.m "$foopath"/
    - cd "$foopath"/ || exit
    - echo "function foo" > foo.m
    - echo "load_detloclcheck('foo.mat')" >> foo.m
    - echo "end" >> foo.m
    - detloclcheck create_checkerboard_image -outfile foo.png -size 23
    - detloclcheck find_checkerboard -f foo.png -output_format mat
    - octave --no-history --no-window-system --eval "$LOAD_DETLOCLCHECK_OCTAVE_MATLAB_TEST"

matlab:
  stage: build_test
  image:
    name: mathworks/matlab:latest
    entrypoint: [""]
  tags:
    - amd64
    - docker
    - ug-cp
  extends: .display_env
  variables:
    PIP_INSTALL: "pip3 install --break-system-packages --user"
  script:
    - sudo chown -R "$(id -u -n)":"$(id -g -n)" "$(pwd)"
    - sudo apt-get update
    - sudo DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -q -y python3-numpy python3-opencv python3-pip python3-scipy
    - python3 --version
    - export PATH="$PATH":"$HOME/.local/bin"
    - $PIP_INSTALL .
    - foopath="$(mktemp --directory)"
    - cp -p compatibility/load_detloclcheck.m "$foopath"/
    - cd "$foopath"/ || exit
    - echo "function foo" > foo.m
    - echo "load_detloclcheck('foo.mat')" >> foo.m
    - echo "end" >> foo.m
    - detloclcheck create_checkerboard_image -outfile foo.png -size 23
    - detloclcheck find_checkerboard -f foo.png -output_format mat
    - matlab -batch "$LOAD_DETLOCLCHECK_OCTAVE_MATLAB_TEST"

pages:
  stage: deploy
  image:
    name: alpine:latest
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  dependencies:
    - debian-latest
  script:
    - date
    - apk add --no-cache pipx
    - export PATH="$PATH":"$HOME/.local/bin"
    - pipx install anybadge
    - anybadge -l "documentation as" -v pdf -f documentation_pdf.svg -c orange -o
    - anybadge -l "documentation as" -v html -f documentation_html.svg -c fuchsia -o
  artifacts:
    paths:
      - documentation_pdf.svg
      - documentation_html.svg
      - public
